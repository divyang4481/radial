//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Radial.DistLock.Client.ServiceReference {

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ILockChannel : Radial.DistLock.ILock, System.ServiceModel.IClientChannel {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class LockClient : System.ServiceModel.ClientBase<Radial.DistLock.ILock>, Radial.DistLock.ILock
    {

        public LockClient()
        {
        }

        public LockClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public LockClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public LockClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public LockClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public bool Acquire(string key, out Radial.DistLock.LockObject obj)
        {
            return base.Channel.Acquire(key, out obj);
        }

        public void Release(string key)
        {
            base.Channel.Release(key);
        }

        public System.Collections.Generic.IList<Radial.DistLock.LockObject> GetList()
        {
            return base.Channel.GetList();
        }
    }
}
